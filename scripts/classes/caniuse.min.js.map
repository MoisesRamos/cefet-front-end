{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scripts/classes/caniuse.js"],"names":[],"mappingsfile":"caniuse.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*jshint curly: true, eqeqeq: true, immed: true, indent: 4, browser: true, jquery: true, evil: true, regexdash: true, browser: true, trailing: true, sub: true, unused: true, devel: true */\r\n\r\n// author: andi smith\r\n// website: www.andismith.com\r\n// version: 0.1\r\n\r\nvar canIUse = (function () {\r\n\r\n    /*  CONFIGURATION =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */\r\n\r\n    //  URL to the data feed\r\n    var SOURCE_DATA_URL = 'https://raw.github.com/Fyrd/caniuse/master/data.json';\r\n\r\n    /*  Turn auto run on page load on or off with AUTO_RUN.\r\n        If you turn it off, just use canIUse.render() to kick it off again.\r\n        If you don't want the WhenCanIUse data to load in the background, turn BE_READY to false.\r\n    */\r\n    var AUTO_RUN = true,\r\n        BE_READY = true;\r\n\r\n    /*  Configure the browsers you want to show here.\r\n        The order defines the order they will appear on the page.\r\n\r\n        Browser options are:\r\n        * android   - Android\r\n        * and_ff    - Android Firefox\r\n        * and_chr   - Android Chrome\r\n        * bb        - Blackberry\r\n        * chrome    - Google Chrome\r\n        * firefox   - Mozilla Firefox\r\n        * ie        - Internet Explorer\r\n        * ios_saf   - iOS Safari\r\n        * opera     - Opera\r\n        * op_mini   - Opera Mini\r\n        * op_mob    - Opera Mobile\r\n        * safari    - Apple Safari\r\n    */\r\n    var BROWSERS = ['chrome', 'firefox', 'ie', 'opera', 'safari'];\r\n\r\n    //  Customise HTML here\r\n    var TMPL_TITLE = '<h2>{title}</h2>', // feature title {title}\r\n        TMPL_STATUS = '<p class=\"status\">{status}</p>', // feature status (W3C Recommendation) {status}\r\n        TMPL_DESCRIPTION = '<p>Suportado a partir de:</p>', // description to user\r\n        TMPL_DESKTOP_TITLE = '', // desktop header\r\n        TMPL_MOBILE_TITLE = '', // mobile header\r\n        TMPL_SUPPORT_WRAPPER = '<ul class=\"agents\">{items}</ul>', // support wrapper {items}\r\n        TMPL_SUPPORT = '<li title=\"{browser} - {support}\" class=\"icon-{browsercode} {supportcode}\"><span class=\"version\">{version}{prefixed}</span></li>',\r\n        TMPL_PREFIX_NOTE = '<p>* requer prefixo.</p>',\r\n        TMPL_LEGEND = '<ul class=\"legend\"><li>Legenda:</li><li class=\"y\">Sim</li><li class=\"n\">Não</li><li class=\"a\">Parcial</li><li class=\"p\">Polyfill</li></ul>',\r\n        TMPL_FOOTER = '<p class=\"stats\">Dados de <a href=\"http://caniuse.com/#feat={feature}\" target=\"_blank\">caniuse.com</a></p>',\r\n        TMPL_LOADING = '<h2>Carregando</h2>',\r\n        TMPL_ERROR = '<h2>Erro</h2><p>Feature \"{feature}\" não encontrada!</p>';\r\n\r\n    /* END CONFIGURATION =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */\r\n\r\n    var canIUseData, // store data for multiple uses.\r\n        storeElementId, // temp storage for elementId if we need to JSONP request\r\n        populateOnLoad; // temp storage for if we should populate\r\n\r\n\r\n\r\n    // get feature data based on feature name\r\n    function getFeature(featureName) {\r\n        featureName = featureName.toLowerCase();\r\n        if (canIUseData.query) {\r\n            return canIUseData.query.results.json.data[featureName];\r\n        } else if (canIUseData.data) {\r\n            return canIUseData.data[featureName];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // get the full text description for the support status\r\n    function getSupportStatus(key) {\r\n        var status = {\r\n            \"y\": \"Yes\",\r\n            \"x\": \"With Prefix\",\r\n            \"n\": \"No\",\r\n            \"a\": \"Partial Support\",\r\n            \"p\": \"Polyfill\",\r\n            \"u\": \"Unknown\"\r\n        };\r\n\r\n        return status[key];\r\n    }\r\n\r\n    // get the specification status\r\n    function getSpecStatus(key) {\r\n        var status = {\r\n            \"rec\": \"W3C Recommendation\",\r\n            \"pr\": \"W3C Proposed Recommendation\",\r\n            \"cr\": \"W3C Candidate Recommendation\",\r\n            \"wd\": \"W3C Working Draft\",\r\n            \"other\": \"Non-W3C, but Reputable\",\r\n            \"unoff\": \"Unofficial or W3C 'Note'\"\r\n        };\r\n\r\n        return status[key] || \"Unknown\";\r\n    }\r\n\r\n    // find the first version that had this status\r\n    function find(needle, haystack) {\r\n\r\n        var result = {\r\n                \"version\": -1,\r\n                \"prefixed\": false\r\n            },\r\n            compare = -1;\r\n\r\n        for (var item in haystack) {\r\n            if (haystack.hasOwnProperty(item) && haystack[item].indexOf(needle) > -1) {\r\n                // some browser versions are formatted n-n, take the first number for comparison\r\n                compare = parseFloat(item.split('-')[0]);\r\n                // is this version lower than the current version we have stored?\r\n                if (result.version === -1 || result.version > compare) {\r\n                    result.version = compare;\r\n                    result.prefixed = (haystack[item].indexOf('x') > -1);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function findSupport(browserData) {\r\n        var status = ['y', 'a', 'p'],\r\n            result = {};\r\n        // find what support is available for this browser\r\n        for (var i = 0; i < status.length; i++) {\r\n            result = find(status[i], browserData);\r\n            if (result.version !== -1) {\r\n                return {\r\n                    'result': status[i], // what type of support\r\n                    'prefixed': result.prefixed,\r\n                    'version': (result.version !== '0') ? result.version : '0' // the version with that support\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            'result': 'n',\r\n            'prefixed': false,\r\n            'version': 'No'\r\n        };\r\n    }\r\n\r\n    /* put the data in a more platable format */\r\n    function generateResults(feature) {\r\n        var agents = {},\r\n            results = {},\r\n            currentBrowser = '',\r\n            support = {};\r\n\r\n        agents = canIUseData.agents || canIUseData.query.results.json.agents;\r\n\r\n        results.title = feature.title; // feature name\r\n        results.code = feature; // feature code?\r\n        results.status = getSpecStatus(feature.status); // feature specification status\r\n        results.agents = [];\r\n\r\n        for (var i = 0, l = BROWSERS.length; i < l; i++) {\r\n\r\n            currentBrowser = BROWSERS[i];\r\n\r\n            if (agents[currentBrowser]) {\r\n\r\n                support = findSupport(feature.stats[BROWSERS[i]]);\r\n\r\n                results.agents.push({\r\n                    \"browsercode\": currentBrowser,\r\n                    \"prefixed\": support.prefixed,\r\n                    \"supportcode\": support.result,\r\n                    \"support\": getSupportStatus(support.result),\r\n                    \"title\": agents[currentBrowser].browser,\r\n                    \"type\": agents[currentBrowser].type.toLowerCase(),\r\n                    \"version\": support.version\r\n                });\r\n            }\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n\r\n    function generateHtml(results) {\r\n\r\n        var html = '',\r\n            resultHtml = '',\r\n            desktopHtml = '',\r\n            mobileHtml = '',\r\n            prefixes = false,\r\n            result = {},\r\n            i = 0,\r\n            l = 0;\r\n\r\n        resultHtml = TMPL_TITLE.replace('{title}', results.title);\r\n        resultHtml += TMPL_STATUS.replace('{status}', results.status);\r\n        resultHtml += TMPL_DESCRIPTION;\r\n\r\n        for (i = 0, l = results.agents.length; i < l; i++) {\r\n            result = results.agents[i]; // simply things\r\n\r\n            // we need to show that prefix notice, captain\r\n            if (result.prefixed) {\r\n                prefixes = true;\r\n            }\r\n\r\n            html = TMPL_SUPPORT.replace(/\\{browsercode\\}/g, result.browsercode)\r\n                                    .replace(/\\{prefixed\\}/g, (result.prefixed === true) ? '*' : '')\r\n                                    .replace(/\\{supportcode\\}/g, result.supportcode)\r\n                                    .replace(/\\{support\\}/g, result.support)\r\n                                    .replace(/\\{browser\\}/g, result.title)\r\n                                    .replace(/\\{version\\}/g, result.version);\r\n\r\n            if (result.type === 'desktop') {\r\n                desktopHtml += html;\r\n            } else if (result.type === 'mobile') {\r\n                mobileHtml += html;\r\n            }\r\n        }\r\n\r\n        // only show if we are including desktop browsers\r\n        if (desktopHtml !== '') {\r\n            resultHtml += TMPL_DESKTOP_TITLE;\r\n            resultHtml += TMPL_SUPPORT_WRAPPER.replace(/\\{items\\}/g, desktopHtml);\r\n        }\r\n\r\n        // only show if we are including mobile browsers\r\n        if (mobileHtml !== '') {\r\n            resultHtml += TMPL_MOBILE_TITLE;\r\n            resultHtml += TMPL_SUPPORT_WRAPPER.replace(/\\{items\\}/g, mobileHtml);\r\n        }\r\n\r\n        if (prefixes) {\r\n            resultHtml += TMPL_PREFIX_NOTE;\r\n        }\r\n\r\n        resultHtml += TMPL_LEGEND;\r\n        resultHtml += TMPL_FOOTER.replace(/\\{feature\\}/g, results.featureCode);\r\n        return resultHtml;\r\n    }\r\n\r\n    function generate(elementId) {\r\n        var $canIUse = [],\r\n            $instance,\r\n            featureCode = '',\r\n            feature = {},\r\n            result = {},\r\n            i = 0,\r\n            l = 0;\r\n\r\n        if (typeof elementId === \"undefined\") {\r\n            $canIUse = document.querySelectorAll('.caniuse');\r\n        } else {\r\n            $canIUse.push(document.getElementById(elementId));\r\n        }\r\n\r\n        l = $canIUse.length;\r\n\r\n        for (i = 0; i < l; i++) {\r\n            $instance = $canIUse[i];\r\n            featureCode = $instance.getAttribute('data-feature') || 'unknown';\r\n            feature = getFeature(featureCode);\r\n            if (feature) {\r\n                result = generateResults(feature);\r\n                result.featureCode = featureCode;\r\n                $instance.innerHTML = generateHtml(result);\r\n            } else {\r\n                $instance.innerHTML = TMPL_ERROR.replace(/\\{feature\\}/g, featureCode);\r\n            }\r\n        }\r\n    }\r\n\r\n    function showLoading(elementId) {\r\n        var $canIUse = [],\r\n            $instance,\r\n            i = 0,\r\n            l = 0;\r\n\r\n        if (typeof elementId === \"undefined\") {\r\n            $canIUse = document.querySelectorAll('.caniuse');\r\n        } else {\r\n            $canIUse.push(document.getElementById(elementId));\r\n        }\r\n\r\n        l = $canIUse.length;\r\n\r\n        for (i = 0; i < l; i++) {\r\n            $instance = $canIUse[i];\r\n            $instance.innerHTML = TMPL_LOADING;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Load the data that will be used to display information.\r\n     */\r\n    function loadData(elementId, populate) {\r\n        var url = '',\r\n            script = document.createElement('SCRIPT');\r\n\r\n        url = 'http://query.yahooapis.com/v1/public/yql?q=' +\r\n            'select * from json where url = \\'' + SOURCE_DATA_URL + '\\'' +\r\n            '&format=json&jsonCompat=new&callback=canIUseDataLoaded';\r\n\r\n        // remember these for when our JSONP returns\r\n        storeElementId = elementId;\r\n        populateOnLoad = populate;\r\n\r\n        script.src = url;\r\n        document.body.appendChild(script);\r\n    }\r\n\r\n    function populate(elementId) {\r\n        if (typeof canIUseData === 'undefined') {\r\n            showLoading(elementId);\r\n            loadData(elementId, true);\r\n        } else {\r\n            generate(elementId);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Public Methods\r\n     */\r\n    return {\r\n        render: populate,\r\n        dataLoaded: function (data) {\r\n            canIUseData = data;\r\n            if (populateOnLoad) {\r\n                generate(storeElementId);\r\n            }\r\n        },\r\n        init: (function () {\r\n            if (AUTO_RUN) {\r\n                populate();\r\n            } else if (BE_READY) {\r\n                loadData(undefined, false);\r\n            }\r\n        })()\r\n    };\r\n}());\r\n\r\nwindow.canIUseDataLoaded = function canIUseDataLoaded(data) {\r\n    canIUse.dataLoaded(data);\r\n};\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}